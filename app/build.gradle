apply plugin: 'com.android.application'

// Load API config from properties file
def apiPropsFile = file("prop_api_keys.properties")
def apiProps = new Properties()
if (apiPropsFile.exists()) {
    apiProps.load(apiPropsFile.newDataInputStream())
} else {
    throw new FileNotFoundException("prop_api_keys.properties")
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.oritmalki.countries"
        minSdkVersion 24 //for supporting completable future
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // API KEYS
        resValue "string", "google_maps_api_key", apiProps.getProperty("google_maps_api_key")

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:recyclerview-v7:28.0.0'

    //External libraries:

    // ViewModel and LiveData - for observing data source in lifecycle aware manner (architecture components)
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    annotationProcessor 'android.arch.lifecycle:compiler:1.1.1'

    // retrofit - for networking
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation group: 'com.squareup.retrofit2', name: 'adapter-java8', version: '2.0.2'

    // gson - for parsing network responses
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

    // JSON Converter - for parsing network responses
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'

    // dagger - dependency injection
    implementation 'com.google.dagger:dagger:2.22.1'
    implementation 'com.google.dagger:dagger-android-support:2.22.1'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.16'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.16'
    testAnnotationProcessor 'com.google.dagger:dagger-compiler:2.16'


    // google maps - maps api
    implementation 'com.google.android.gms:play-services:12.0.1'

    // for loading svg form server into view
    implementation 'com.github.2coffees1team:GlideToVectorYou:v1.2.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.1.0'

    // dagger mock - for testing
    testImplementation 'com.github.fabioCollini.daggermock:daggermock:0.8.1'
    androidTestImplementation 'com.github.fabioCollini.daggermock:daggermock:0.8.1'


}
